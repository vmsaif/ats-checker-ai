resume_compilation_task:
  description: >
    You will receive a structured JSON object containing organized resume data. Your task is to format this data into a professional resume in plain text format. 

    **Formatting Rules:**
    * **Strictly follow the format provided below, ensuring consistent spacing and use of new lines.** 
    * Place a single empty line between each section (e.g., Summary, Skills, Project Experience, Work Experience, Education, References).
    * Place a single empty line between each project or work experience entry.
    * Maintain consistent indentation. All bullet points should be indented with a single hyphen (-) followed by a space.
    * Avoid extra spaces between words or punctuation marks.
    * Ensure there is a single space before and after each "|" character.
    * Pay close attention to the specific formatting required for each section, such as the Education section. Make sure to include all required elements in the correct order.
    * In the Skills section, separate items with commas, not hyphens. Make sure to group skills under appropriate categories.

    Here is the structured JSON data you need to format:
    {resume_data_in_json} 

  expected_output: >
    Do not mention any section that is not present in the JSON data. For example, if the JSON data does not contain a "References" section or [[Personal Website URL]] do not include it in the resume output.

    [empty line]
    # **[User's First and Last Name]**
    [Phone] | [Email] | [LinkedIn/Profile URL] | [Personal Website URL] 
    [Address], [City], [State]

    [empty line]
    ## Summary
    [Summary]

    [empty line]
    ## Skills

    [empty line]
    **[Category 1]:** (eg, Programming Languages:)
    - [Skill 1], [Skill 2], [Skill 3], ... 

    [empty line]
    **[Category 2]:** (eg, Frameworks:)
    - [Skill 4], [Skill 5], ...

    [empty line]
    **[Category 3]:** (eg, Tools:)
    - [Skill 6], [Skill 7], ...

    [empty line]
    **Soft Skills:** 
    - [Skill 1], [Skill 2], [Skill 3], ...
    - [Skill 4], [Skill 5], ...

    [empty line]
    ## Project Experience
    ### [Project Title 1]
    [Start Month Year] - [End Month Year] ([Duration]) | [City], [State] 
    Technologies, frameworks, and tools used:  [List of technologies, separated by commas]
    Link: [Link to the project]
    - [Key achievement 1]
    - [Key achievement 2]
    - ...

    [empty line]
    ### [Project Title 2]
    [Start Month Year] - [End Month Year] ([Duration]) | [City], [State] 
    Technologies, frameworks, and tools used:  [List of technologies, separated by commas]
    Link: [Link to the project]
    - [Key achievement 1]
    - [Key achievement 2]
    - ...

    [empty line]
    ## Work Experience
    ### [Job Title 1]
    [Start Month Year] - [End Month Year] ([Duration]) | [Company Name] | [City], [State]
    Technologies, frameworks, and tools used:  [List of technologies, separated by commas]
    Link: [Link to the relevant work experience (e.g., company website)]
    - [Key achievement 1]
    - [Key achievement 2]
    - ...

    [empty line]
    ## Education
    **[University Name]**, [City], [State]
    - [Degree], [Major] | Graduated: [Graduation Date]
    - GPA: [GPA]

    [empty line]
    ## References

    ## [Other Sections you found in the JSON and you want to include in the resume]

    
# ------------- resume_in_json_agent -> Resume Data Structuring -------------

resume_in_json_task:
  description: >
    Your ONLY task is to organize the following input data into a JSON object representing a professional resume, EXACTLY as instructed below. Do NOT deviate from these guidelines:

    1.  **Contact Info:** Extract the following fields: "Full Name", "Phone", "Email", "LinkedIn Profile URL", "Personal Website URL", and "Address".
    2.  **Summary:** Write down the summary provided in the input data.
    3.  **Skills:** Categorize the skills then list them.
        - Ensure no skill is repeated. Combine variations of the same skill (e.g., "Problem-Solving" and "Problem-solving skills").
        - Carefully determine if a skill is technical (related to tools, technologies) or soft (related to personality, work style). 
    4.  **Projects:** For each project, extract the following fields: "Project Title", and "Timeline" (include Start Month Year - End Month Year, "Technologies", "Link", "Key achievements". 
        - Ensure to include ALL "Key achievements" listed for each project. 
        - Keep the action verbs at the beginning of each bullet point in "Key achievements".
    5.  **Work:** For each work experience entry, extract these fields: "Job Title", "Company Name", "Location" (City, State), "Timeline" (include Start Month Year - End Month Year AND calculate the Duration in parentheses), "Technologies", "Link", "Key achievements". 
        - Ensure to include ALL "Key achievements" listed for each work experience. 
        - Keep the action verbs at the beginning of each bullet point in "Key achievements".
        - If "Company Name" or "Link" is not available, omit them.  
    6.  **Education:** Extract these fields: "Degree", "Major", "University", "Location" (City, State), "Graduation Date", and "GPA". 
    7.  **Additional:** Include any other relevant sections, like "References," based on the input data.

    **Important:** 
       - You MUST include ALL data from the input. Do NOT leave out any information. If a field is missing, represent it as an empty string ("").
       - Do NOT fabricate, invent, or add ANY information that is not explicitly stated in the input data.
       - Do not infer, assume, or create any details not directly present in the input. 
       - Focus solely on accurately organizing the given information into a structured JSON format. 

    **Input Data**:
    Check the context provided to you.

  expected_output: >
    ```json
    {
      "Contact Info": {
        "Full Name": "...",
        "Phone": "...",
        "Email": "...",
        "LinkedIn Profile URL": "...", 
        "Personal Website URL": "...",
        "Address": "..." 
      },
      "Summary": "...",
      "Skills": {
        "Technical": [
          "...", 
          "..."
        ],
        "Soft": [
          "...",
          "..." 
        ]
      },
      "Projects": [
        {
          "Project Title": "...",
          "Timeline": "... (duration)",
          "Technologies": "...",
          "Link": "...",
          "Key achievements": [
            "...", 
            "..."
          ]
        },
        ... 
      ],
      "Work": [
        {
          "Job Title": "...",
          "Company": "...",
          "Location": "...",
          "Timeline": "... (duration)",
          "Technologies": "...",
          "Link": "...",
          "Key achievements": [
            "...",
            "..." 
          ]
        },
        ...
      ],
      "Education": {
        "Degree": "...",
        "Major": "...",
        "University": "...",
        "Location": "...",
        "Graduation Date": "...",
        "GPA": "..."
      },
      "Additional": {
        "References": "..."
      }
    }
    ``` 

# ------------- generalist_agent -> User Basic Profile Creation -------------

personal_information_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive personal details.

    How you should use the tool:
    argument:
    "question": "Give me the full name, phone number, email, LinkedIn, other social media profile links, personal website link, portfolio link, GitHub profile, address, city, state, zip code, and country."

    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field.
    for example, if you didn't find the GitHub, ask the tool "GitHub" to get the GitHub link, then make sure whether the link is a repository link or a profile link.

  expected_output: >
    In JSON format, Do not keep the keys that have null values:
      {
        "Personal Information": {
          "Full Name": "",
          "Phone Number": "",
          "Email": "",
          "LinkedIn": "",
          "Other Social Media Profiles": "",
          "Personal Website": "",
          "Portfolio": "",
          "GitHub": "",
          "Address": "",
          "City": "",
          "State": "",
          "Zip Code": "",
          "Country": "",
          ...
        }
      }

education_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive education details.
    How you should use the tool:
    argument:
    "question": "Give me the list of all educational qualifications, including degrees, majors, universities, graduation dates, and any honors or distinctions."
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, Re-run the tool with the missing field. 
  expected_output: >
    In JSON format:
      {
        "Education": {
          "Degree": "",
          "Major": "",
          "University": "",
          "University Location": "",
          "Graduation Date": "",
          "GPA": "",
          "Honors/Distinctions": "
          ... 
        }
      }

volunteer_work_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive volunteer work details.
    How you should use the tool:
    argument:
    "question": "Give me a list of all volunteer experiences, including organization names, roles, responsibilities, and dates."
    
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field. Do not make up any information.
  expected_output: >
    In JSON format: 
      {
        "Volunteer Work": [
          {
            "Organization Name": "",
            "Role": "",
            "Responsibilities": "",
            "Timeline": "",
            ...
          }
        ]
      }

awards_recognitions_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive awards and recognition details.
    How you should use the tool:
    argument:
    "question": "Give me a list of all awards and recognitions, including award names, awarding organizations, dates, and reasons for recognition."
    
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field. Do not make up any information.
  expected_output: >
    In JSON format: 
      {
        "Awards and Recognitions": [
          {
            "Award Name": "",
            "Awarding Organization": "",
            "Date": "",
            "Reason": "",
            ...
          }
        ]
      }

references_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive reference details.
    How you should use the tool:
    argument:
    "question": "Give me a list of all references, including names, positions, companies, contact information, and relationships to you."
    
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field. Do not make up any information.
  expected_output: >
    In JSON format: 
      {
        "References": [
          {
            "Name": "",
            "Position": "",
            "Company": "",
            "Contact Information": "",
            "Relationship": "",
            ...
          }
        ]
      }

personal_traits_interests_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive personal traits and interests details.
    How you should use the tool:
    argument:
    "question": "Give me a list of all personal traits and interests, including strengths, weaknesses, hobbies, and passions."
    
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field. Do not make up any information.
  expected_output: >
    In JSON format: 
      {
        "Personal Traits and Interests": {
          "Strengths": "",
          "Weaknesses": "",
          "Hobbies": "",
          "Passions": "",
          ...
        }
      }

miscellaneous_extraction_task:
  description: >
    You are given a tool that retrieves info simply by asking questions as a list of strings. Use the tool to extract comprehensive miscellaneous details.
    How you should use the tool:
    argument:
    "question": "Give me any additional information that you would like to include in your profile, such as languages spoken, certifications, professional affiliations, or other relevant details."
    
    The tool will return a large chunk of information. look into the chunk to find your data. If you did not find a field, ask the tool again with the missing field. Do not make up any information.
  expected_output: >
    In JSON format: 
      {
        "Miscellaneous": {
          "Languages Spoken": "",
          "Certifications": "",
          "Professional Affiliations": "",
          "Other Relevant Details": "",
          ...
        }
      }

profile_builder_task:
  description: >
    Based on the information extracted from the user's information, you will create a comprehensive user profile by combining all the extracted details.

    You will use the extracted data from the previous tasks to create a detailed user profile. Ensure that the profile is well-organized, and accurate, and includes all the relevant information extracted from the user's input.

  expected_output: >
    In JSON format
      {
        "User Profile": {
          "Personal Information": {
            "Full Name": "",
            "Phone Number": "",
            "Email": "",
            "LinkedIn": "",
            "Other Social Media Profiles": "",
            "Personal Website": "",
            "Portfolio": "",
            "GitHub": "",
            "Address": "",
            "City": "",
            "State": "",
            "Zip Code": "",
            "Country": "",
            ...
          },
          
          "Education": {
            "Degree": "...",
            "Major": "...",
            "University": "...",
            "Location": "...",
            "Graduation Date": "...",
            "GPA": "..."
          },
          "Volunteer Work": [
            {
              "Organization Name": "",
              "Role": "",
              "Responsibilities": "",
              "Timeline": "",
              ...
            }
          ],
          "Awards and Recognitions": [
            {
              "Award Name": "",
              "Awarding Organization": "",
              "Date": "",
              "Reason": "",
              ...
            }
          ],
          "References": [
            {
              "Name": "",
              "Position": "",
              "Company": "",
              "Contact Information": "",
              "Relationship": "",
              ...
            }
          ],
          "Personal Traits and Interests": {
            "Strengths": "",
            "Weaknesses": "",
            "Hobbies": "",
            "Passions": "",
            ...
          },
          "Miscellaneous": {
            "Languages Spoken": "",
            "Certifications": "",
            "Professional Affiliations": "",
            "Other Relevant Details": "",
            ...
          }
        }
      }

# ------------- generalist_agent -> User Experiences Extraction -------------

work_experience_extraction_task:
  description: >
    The task involves extracting detailed information about the user's work experiences, including work titles, durations, team sizes, roles, technologies used, and outcomes. Use the tool to extract this information from the user's input.

    Look into the chunk below to find your data. Look at each work closely to understand the tools and technologies, frameworks used during the work. Also, look for any soft skills the applicant has. There might be new tools or technologies that you have not seen before in the work experiences, you should include them in the output.

    {user_info_organized_data}
    
    When extracting technologies, frameworks, and tools used, use the provided web search tool to search for any unfamiliar tools or technologies to understand their relevance to the job description.
  expected_output: >
    in JSON format:
      {
        "Work Experience": [
          {
            "Job Title": "",
            "Company Name": "",
            "Timeline": "",
            "Technologies, frameworks, and tools Used": "",
            "Skills": "",
            "Link": "",
            "Key Highlights": [
              "",
              "",
              "",
              ""
            ],
            "Team size": "",
            "Outcomes": ""
          }
        ]
      }
    
project_experience_extraction_task:
  description: >
    The task involves extracting detailed information about the user's project experiences, including project titles, durations, team sizes, roles, technologies used, and outcomes. Use the tool to extract this information from the user's input.

    Look into the chunk to find your data. Look at each project closely to understand the tools and technologies, frameworks used to create it. Also, look for any soft skills the applicant has. There might be new tools or technologies that you have not seen before in the project experiences, you should include them in the output.

    {user_info_organized_data}

  expected_output: >
    in JSON format:
      {
        "Project Experience": [
          {
            "Project Title": "",
            "Timeline": "",
            "Technologies, frameworks, and tools Used": "",
            "Skills": "",
            "Link": "",
            "Key Highlights": [
              "",
              "",
              "",
              ""
            ],
            "Team size": "",
            "Outcomes": ""
          }
        ]
      }


# ------------- generalist_agent -> Process information from the user's experiences -------------

split_context_of_experience_choosing_task:
  description: >
    Split the context provided to you at the breaking point "rejected_experiences". In your output, you will provide everything before the "rejected_experiences" as the final output of the task.

    The context you need to split is provided to you from the previous task.

  expected_output: >
    Everything before the "rejected_experiences" will be the final output of the task.

gather_info_of_chosen_experiences:
  description: >
    Provide detailed information for each of the "selected_experiences" from this content below.

    {user_info_organized_data}

  expected_output: >
    [Maintain the order of work experiences or project experiences. Group them as "Work Experience" or "Project Experience" accordingly. Provide the following details for each experience or project.]
    
    In JSON format:
      {
        "Work Experience": [
          {
            "Title": "",
            "Company Name": "",
            "Timeline": "",
            "Duration": " years, months", (or " months" if less than a year)
            "Technologies, frameworks, and tools Used": "",
            "Skills": "",
            "Link": "",
            "Key Highlights": [
              "",
              "",
              "",
              ""
            ],
            "Team size": "",
            "Outcomes": ""
          }
        ],
        "Project Experience": [
          {
            "Title": "",
            "Timeline": "",
            "Duration": "",
            "Technologies, frameworks, and tools Used": "",
            "Skills": "",
            "Link": "",
            "Key Highlights": [
              "",
              "",
              "",
              ""
            ],
            "Team size": "",
            "Outcomes": ""
          }
        ]
      }

split_context_of_ats_friendly_keywords_into_experiences:
  description: >
    Split the context provided to you at the breaking point "REPORT ON CHANGES:". In your output, you will provide everything before the "REPORT ON CHANGES:" as the final output of the task.

    The context you need to split is provided to you from the previous task.

  expected_output: >
    Every Single line before the "REPORT ON CHANGES:" will be the final output of the task in JSON format. 

# ------------- career_objective_agent -> Career Objective Crafting -------------

career_objective_task:
  description: >
    Craft a **captivating** and **actionable** career objective statement for the user's resume, designed to immediately capture the attention of recruiters and hiring managers. 

    This objective should:
    - **Highlight the user's unique value proposition:**  Emphasize the user's skills, experience, and "magic button" approach to software development.
    - **Align with the company's mission and the job description:**  Demonstrate the user's understanding of the company's goals and how their skills can contribute to them.
    - **Be concise and impactful:**  Use strong verbs and compelling language to create a memorable statement that leaves a lasting impression.

    **Provided to you:**
    - **Skills of the user:** 
      Check the context provided to you from the previous task.
    - **Job Description:** 
    {job_description}

    - **Tool:** This tool is directly connected to the user's information. You will use the provided tool to ask questions and gather the necessary information to create the career objective statement. So prepare the questions accordingly. Also, consider the user's philosophy and approach to software development when crafting the career objective statement if available.

    Make the career objective statement concise and impactful, focusing on the user's unique value proposition and how it aligns with the job description and the company's mission. Do not make more than 3-4 sentences.

  expected_output: >
    A concise and impactful career objective statement that immediately captures the attention of recruiters and hiring managers, highlighting the user's unique value proposition, aligning with the company's mission and the job description, and leaving a lasting impression. 

    In JSON format:
      {
        "Career Objective": "..."
      }

# ------------- cross_match_evaluator_with_job_description_agent -> -------------

ats_friendly_skills_task:
  description: >
    Your task is to analyze and compare the keywords and phrases from a job post, which have already been extracted, against the context provided to you. 
    
    Evaluate the degree of similarity between these keywords.

    Source 1 (Job Description Keywords): 
    """{src_1}"""

    Source 2 (User's Skills and Technologies, Frameworks, Tools, Soft Skills, etc.) from the context provided. 

    You are also provided with the tool to search the web for skills and technologies that are not familiar to you. 
    
    Before Writing the "No Match" section, Use the provided web search tool to search for the skills and technologies that you are not familiar with in both the job description and user's list and check if they are relevant to the job description or not.

    To use the tool, 
      query: str = Field(description="search query to look up")

  expected_output: >
    Produce a structured report that categorizes the findings into 'Exact Match', 'Partial Match', or 'No Match'. 

    **Skills Matched With Job Description:**

    - **'Exact Match'**: Direct matches between job description requirements and applicant’s qualifications. An exact match is a skill or experience that is mentioned in both the job description and the applicant's profile using the same or very similar terms.

    In JSON Format. Example:

      {
        "user_skills": {
          "exact_match_with_job_description": {
            "Programming Languages": [
              "item 1",
              "item 2",
              ...
            ],
            "Frameworks": [
              "item 1",
              "item 2",
              ...
            ],
            "Tools": [
              "item 1",
              "item 2",
              ...
            ],
            "Soft Skills": [
              "item 1",
              "item 2",
              ...
            ]
          }
        }
      }



    - **'Partial Match'**: Skills or experiences that are somehow related but not identical to the job requirements.

      In JSON Format:

      {
        "user_skills": {
          "partial_match_with_job_description": {
            "Programming Languages": {
              "name": "item 1",
              "pertially_matched_with_job_description": "item 1"
            },
            "Frameworks": {
              "name": "item 1",
              "pertially_matched_with_job_description": "item 1"
            },
            "Tools": {
              "name": "item 1",
              "pertially_matched_with_job_description": "item 1"
            },
            "Soft Skills": {
              "name": "item 1",
              "pertially_matched_with_job_description": "item 1"
            }
          }
        }
      }

    **No Match**: Skills mentioned in the job description but are not present in the applicant's profile.

      Example in JSON

      {
        "missing_from_the_applicant_skills": {
          "Programming Languages": [
            "item 1",
            "item 2",
            ...
          ],
          "Frameworks": [
            "item 1",
            "item 2",
            ...
          ],
          "Tools": [
            "item 1",
            "item 2",
            ...
          ],
          "Soft Skills": [
            "item 1",
            "item 2",
            ...
          ]
        }
      }

split_context_of_ats_friendly_skills_task:
  description: >
    Split the context provided to you at the breaking point "No Match (from job description):". In your output, you will provide everything before the "No Match (from the job description):" as the final output of the task.

    Also, you will categorize those skills of Exact Match and Partial Match into subcategories whether they are Technical Skills, Frameworks, Tools, Soft Skills or any other category you find suitable.

    Check the context provided by the previous task.

  expected_output: >
    In JSON:
      {
        "user_skills": {
          "exact_match_with_job_description": {
            "Programming Languages": [
              "item 1",
              "item 2",
              ...
            ],
            "Frameworks": [
              "item 1",
              "item 2",
              ...
            ],
            "Tools": [
              "item 1",
              "item 2",
              ...
            ],
            "Soft Skills": [
              "item 1",
              "item 2",
              ...
            ]
          },

          "partial_match_with_job_description": {
            "Programming Languages": [
              "item 1",
              "item 2",
              ...
            ],
            "Frameworks": [
              "item 1",
              "item 2",
              ...
            ],
            "Tools": [
              "item 1",
              "item 2",
              ...
            ],
            "Soft Skills": [
              "item 1",
              "item 2",
              ...
            ]
          }
        }
      }

experience_choosing_task:
  description: >
    Your task is to analyze the user's work experiences and project experiences and select the 4 most relevant experiences for the provided job description. 

    **Here's how to choose the experiences:**

    1. **Recent Experience:** Always include the user's most recent experience, even if it's a project. However, if the most recent experience is very outdated compared to today's date ({today_date}) or entirely irrelevant, you can exclude it. 
    2. **Relevance to Job Description:** Prioritize experiences that closely align with the job description. Consider:
        * **Keywords and Phrases:**  Favor experiences that heavily utilize keywords and phrases from the job description. 
        * **Tools and Technologies:**  Prioritize experiences that showcase the specific tools, technologies, and frameworks mentioned in the job description. 
        * **Skills:**  Choose experiences that demonstrate the skills required for the job.
    3. **Filling the Remaining Slots out of 4:** After including the most recent experience, select three more experiences based on their relevance, prioritizing those that highlight the most important keywords, technologies, and skills from the job description.

    **Input:**
      * **Job Description Keywords:** {jd_keyword} 
      
      * **User's Work Experiences, Project Experiences:** This information is provided to you as context from the previous task.

      Remember, in total, you need to select 4 experiences either from work experiences, project experiences or a combination of both.

  expected_output: >
    Any combination of 4 experiences that are most relevant to the job description. Determine the priority order as mentioned in the task description.

    ```json
    {
      "selected_experiences": {
        "Work Experience (or Project Experience)": [
            experience_1,
            experience_2
        ],
        "Project Experience (or Work Experience)": [
            experience_1,
            experience_2,
        ]
      }
    }


    * **Explanation for Not Choosing Other Experiences (One by one):**
    {
      "rejected_experiences": [
        {
          "title": "...",
          "reason": "..."
        },
        {
          "title": "...",
          "reason": "..."
        },
        ...
      ]
    }



    * **Explanation for Not Choosing Other Experiences (One by one):**

# -------------Technical Details Agent (Technical Skills and Professional Affiliations Specialist) tasks--------------

skills_from_exp_and_project_task:
  description: >
    Extract a list of skills, technologies, frameworks etc used from the user's work experiences and project experiences. You have been given the context of work experiences and project experiences. Each work experience and project experience contains a "Technologies Used:" and "Skills:" field. Use these fields to extract the skills.

    Inside the body of the project and work experiences, you might find unfamiliar tools or technologies that might not be included in the "Technologies, frameworks, and tools Used" field. Use the provided web search tool to search for the skills and technologies that you are not familiar with. then consider them as a part of the skills. You can list fields or areas of skills and technologies up to 4 items.

    To use the tool, 
      query: str = Field(description="search query to look up")
    
  expected_output: >
    In JSON format:
      {
        "Combined Skills List": {
          "Technologies": {
            {
              "Name": "Python",
              "field": "Programming Language"
            },
            {
              "Name": "Java",
              "field": "Programming Language, ..."
            }
          },
          "Frameworks": {
            {
              "Name": "Langchain",
              "field": "AI, LLM, ..."
            },
            {
              "Name": "Angular",
              "field": "JavaScript Framework, ...."
            },
            {
              "Name": "Spring Boot",
              "field": "Java Framework"
            }
          },

          "Skills": {
            {
              "Name": "Data Analysis",
              "field": "Analytical Skills, ..."
            },
            {
              "Name": "Machine Learning",
              "field": "AI, ML, ..."
            },
            {
              "Name": "Project Management",
              "field": "Management Skills, ..."
            }
          },

          "Soft Skills": {
            {
              "Name": "Communication",
              "field": "Interpersonal Skills"
            },
            {
              "Name": "Leadership",
              "field": "Management Skills"
            },
            {
              "Name": "Teamwork",
              "field": "Collaboration Skills"
            }
          }

skills_extraction_task:
  description: >
    Your task is to combine skills, tools, technologies, frameworks, and soft skills from two different sources into one comprehensive list. 

    First Source: You are provided with a list of skills extracted from the user's work experiences and project experiences as context.
    
    Second Source: Use the provided tool to gather more skills. Simply ask the tool for "Skills" to retrieve a list of additional skills.

    Your job is to merge the skills from both sources into a single list, ensuring no items are omitted and that both sources are represented equally.

  expected_output: >
    In JSON format:
      {
        "Combined Skills List": {
          "Technologies": {
            {
              "Name": "Python",
              "field": "Programming Language"
            },
            {
              "Name": "Java",
              "field": "Programming Language"
            }
          },
          "Frameworks": {
            {
              "Name": "Langchain",
              "field": "AI, LLM"
            },
            {
              "Name": "Angular",
              "field": "JavaScript Framework"
            },
            {
              "Name": "Spring Boot",
              "field": "Java Framework"
            }
          },

          "Skills": {
            {
              "Name": "Data Analysis",
              "field": "Analytical Skills"
            },
            {
              "Name": "Machine Learning",
              "field": "AI, ML"
            },
            {
              "Name": "Project Management",
              "field": "Management Skills"
            }
          },

          "Soft Skills": {
            {
              "Name": "Communication",
              "field": "Interpersonal Skills"
            },
            {
              "Name": "Leadership",
              "field": "Management Skills"
            },
            {
              "Name": "Teamwork",
              "field": "Collaboration Skills"
            }
          }

# ------------- If need an explanation of each decision, use this expected_output ------------

  # expected_output: >
  #   [Use empty lines to separate the experiences. Group each experience as "Work Experience" or "Project Experience" together and provide the title and explanation for each.]
  #   * **Top 4 Relevant Experiences:**
  #       1. [Title]: 
  #           [Explanation]
        
  #       2. [Title]: 
  #           [Explanation]
        
  #       3. [Title]: 
  #           [Explanation]
        
  #       4. [Title]: 
  #           [Explanation]

  #   [Use empty lines to separate the experiences.]
  #   * **Explanation for Not Choosing Other Experiences (One by one):**
    
  #       1. [Title]: 
  #           [Explanation]
        
  #       2. [Title]: 
  #           [Explanation]
        
  #       3. [Title]: 
  #           [Explanation] 
  #       ... and so on

# --------------------------------------------------------

# ---------------ats_keyword_integration_agent (ATS Keyword Integration Specialist) tasks---------------

ats_friendly_keywords_into_experiences:
  description: >
    This task helps you create compelling resume bullet points by adding important
    keywords from a job description keywords summary file into descriptions of the applicant's experiences.
    The goal is to make these descriptions stand out to Applicant Tracking
    Systems (ATS), while also being easy to read and understand.

    **Guidelines:**
      - **Relevance:** Only use keywords that truly fit with the experience you're
        describing.
      - **Natural Language:** Keywords should fit smoothly into the sentences. Don't
        just list keywords or force them in where they don't belong.
      - **Conciseness and Clarity:** Use strong action verbs and remove unnecessary
        words. Focus on making a big impact with a few words. Summarize each
        experience in 1-2 short, powerful sentences, just like you would on a resume.
      - **Context Matters:** Think about the overall story of each experience. Pick
        keywords that accurately show the skills you used and what you were
        responsible for.
      - **Avoid Keyword Overload:** Using too many keywords can hurt your
        chances. Aim for a balanced and impactful description without repeating
        keywords too much.

    **Job Description Keywords:** 
    
    {jd_keywords}

    At the end of the task, you will need to provide a report on the changes you made.

  expected_output: >
    - **Title / Role:** (If you have this information)
    - **Company Name:** (If you have this information)
    - **Timeline:** (If you have this information)
    - **Duration:** (Calculate from the timeline)
    - **Technologies, Frameworks, and Tools Used:**
    - **Skills:**
    - **Link:** (If relevant)
    - **Key Highlights (ATS-friendly bullet points):**
        - 1.
        - 2.
        - 3.
        - 4.
    - **Team Size:** (If you have this information)
    - **Outcomes:** (If you have this information)

    **REPORT ON CHANGES:**
      - **Keyword Changes:** For each experience:
          - Original Sentence: Write the original sentence as you found before adding or replacing keywords.
          - Revised Sentence: Write the revised sentence, highlighting the **exact keywords** you added from the job description. 
          - Keywords Added: List the keywords you added, ensuring they **exactly match** the words from the job description's keyword summary. 
          - Rationale: Explain why you chose to use those specific keywords. What did you see in the job description that made you add them? Be specific and refer to details from the job description. 

    example:

      Example 1:
        Keywords found from the Job Description: [Python, Data Analysis, Data Visualization, Collaboration, Communication, Teamwork]
      
        Before Changes:
          - Chosen Experiences (Highlights):
            - Developed a machine learning algorithm for image recognition using Python
              and TensorFlow.
            - Collaborated with a team of engineers to build a data visualization
              dashboard for a client.

        After Adding Keywords:
          - Key Highlights (ATS-friendly bullet points):
            - Developed a **Python**-based machine learning algorithm for image
              recognition, utilizing **data analysis** and **data visualization**
              techniques to optimize performance.
            - **Collaborated** effectively with a team of engineers to design and
              build a data visualization dashboard, showcasing strong **communication**
              and **teamwork** skills.

      Example 2:
        Keywords found from the Job Description: [Java, Spring Boot, RESTful APIs, Agile, Scrum, Problem-Solving]

        Before Changes:
          - Chosen Experiences (Highlights):
            - Led the development of a web application using Java and Spring Boot.
            - Implemented RESTful APIs for a client project.

        After Adding Keywords:
          - Key Highlights (ATS-friendly bullet points):
            - Spearheaded the development of a web application leveraging **Java** and
              **Spring Boot**, following **Agile** and **Scrum** methodologies to
              ensure efficient delivery.
            - Successfully implemented **RESTful APIs** for a client project, showcasing
              strong **problem-solving** skills and technical expertise.

      report_on_changes:
        Before Changes:
          - Chosen Experiences (Highlights):
            - Developed a machine learning algorithm for image recognition using Python
              and TensorFlow.
            - Collaborated with a team of engineers to build a data visualization
              dashboard for a client.

        After Adding Keywords:
          - Key Highlights (ATS-friendly bullet points):
            - Developed a **Python**-based machine learning algorithm for image
              recognition, utilizing **data analysis** and **data visualization**
              techniques to optimize performance.
            - **Collaborated** effectively with a team of engineers to design and
              build a data visualization dashboard, showcasing strong **communication**
              and **teamwork** skills.

          New keywords added = [data analysis, communication, teamwork]
          Rationale: The job description emphasizes the importance of communication and teamwork skills, which are evident in the applicant's experience. Adding these keywords helps align the experience with the job requirements.

          All Matched keywords between the job description and the user's experiences:
          [Python, Data Analysis, Data Visualization, Collaboration, Communication, Teamwork]
          

        
    

# professional_affiliations_task:
#   description: >
#     List all memberships in professional organizations including roles and responsibilities within these groups.
#   expected_output: >
#     A detailed account of professional affiliations, positions held, and the role played in each organization.

# ---------------Publications and Presentations Agent (Publications and Presentations Documenter)---------------

# publications_presentations_task:
#   description: >
#     Compile a list of all publications and presentations, detailing authors, titles, dates, and events where presented.
#   expected_output: >
#     A detailed list of publications and presentations, including co-authors, titles, publication dates, and event names.

# activities_leadership_task:
#   description: >
#     Document all leadership roles and activities, including specific achievements and impacts within these roles.
#   expected_output: >
#     An in-depth overview of leadership activities, detailing the roles, durations, responsibilities, and key achievements.

# languages_task:
#   description: >
#     Compile a detailed listing of all languages spoken by the user, along with proficiency levels for each.
#   expected_output: >
#     A comprehensive list of languages with an assessment of proficiency levels, enhancing the cultural and communication profile of the user.

# strengths_task:
#   description: >
#     Analyze and document the user's strengths based on feedback, self-assessment, and observed performance.
#   expected_output: >
#     A balanced view of the user's strengths, providing insights for potential employers and personal development.

# interests_task:
#   description: >
#     Identify and document detailed interests of the user that align with or enhance their professional profile.
#   expected_output: >
#     A detailed description of interests that complements the professional and personal traits, adding depth to the user's profile.

# developmental_activities_task_such as courses, training, workshops:
#   description: >
#     Gather information on all developmental activities such as courses, training, workshops, conferences, seminars, webinars, boot camps, hackathons, competitions, and scholarships.
#   expected_output: >
#     A comprehensive list and descriptions of developmental activities, showcasing ongoing learning and engagement in professional growth.







